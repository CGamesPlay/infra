---
  - name: configure wireguard
    hosts: '*'
    become: true
    gather_facts: false
    tags:
      - wireguard
      - always
    tasks:
      - name: set vault wireguard policy
        shell:
          cmd: |
            vault write wireguard/groups/default network=172.30.0.0/16
            vault policy write wireguard - <<EOF
            path "wireguard/groups/default/*" {
              capabilities = ["create", "update", "read", "list"]
            }
            EOF
            vault write identity/entity name=server-{{ DC }} policies=vault-agent,wireguard
        changed_when: no # no change detection
      - name: set peer configuration
        shell:
          cmd: |
            vault write wireguard/groups/default/master \
              hostname=$(curl -4 ifconfig.co) \
              port=51820 \
              allowed_ips={{ wireguard_ip }}/20
        changed_when: no # no change detection
      - name: find wan interface
        shell:
          cmd: |
            ip -o -4 route show to default | awk '{ print $5 }'
        register: wan_interface
        check_mode: no
        changed_when: no
      - name: wireguard config
        blockinfile:
          path: /etc/vault-agent.d/vault-agent.hcl
          create: yes
          marker: "# {mark} WIREGUARD CONFIG"
          block: |
            template {
                destination = "/etc/wireguard/wg0.conf"
                error_on_missing_key = true
                contents = <<EOF
            {{ '{{' }}- with secret "wireguard/groups/default/master" -}}
            [Interface]
            Address = {{ '{{' }} range $i, $ip := .Data.allowed_ips }}{{ '{{' }} if ne $i 0 }},{{ '{{' }} end }}{{ '{{' }} $ip }}{{ '{{' }} end }}
            ListenPort = {{ '{{' }} .Data.port }}
            PrivateKey = {{ '{{' }} .Data.private_key }}
            PostUp = iptables -A FORWARD -i %i -j ACCEPT
            Postup = iptables -t nat -A POSTROUTING -o {{ wan_interface.stdout }} -j MASQUERADE
            PostDown = iptables -D FORWARD -i %i -j ACCEPT
            PostDown = iptables -t nat -D POSTROUTING -o {{ wan_interface.stdout }} -j MASQUERADE

            {{ '{{' }} end }}
            {{ '{{' }}- range secrets "wireguard/groups/default/" -}}
            {{ '{{' }}- if ne . "master" -}}
            {{ '{{' }}- with secret (printf "wireguard/groups/default/%s" .) -}}
            [Peer]
            PublicKey = {{ '{{' }} .Data.public_key }}
            AllowedIPs = {{ '{{' }} range $i, $ip := .Data.allowed_ips }}{{ '{{' }} if ne $i 0 }},{{ '{{' }} end }}{{ '{{' }} $ip }}{{ '{{' }} end }}

            {{ '{{' }} end -}}
            {{ '{{' }}- end -}}
            {{ '{{' }}- end -}}
            EOF
              exec {
                command = "bash -c 'if systemctl is-active wg-quick@wg0; then wg syncconf wg0 <(wg-quick strip wg0); else systemctl enable --now wg-quick@wg0; fi'"
              }
            }
        notify:
          - restart vault-agent
      - name: enable IP forwarding
        sysctl:
          name: net.ipv4.ip_forward
          value: '1'
          sysctl_set: true

      - name: install dependencies
        apt:
          name:
            - qrencode
            - jq
      - name: install wg-add-peer
        template:
          src: ../templates/wireguard/wg-add-peer.j2
          dest: /usr/local/bin/wg-add-peer
          mode: 0755
    handlers:
      - name: restart vault-agent
        systemd:
          name: vault-agent
          state: restarted
