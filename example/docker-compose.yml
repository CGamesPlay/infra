version: "3.5"

services:

  # This is the simplest possible exposed service. It does not rely on any other
  # containers and does not require access control.
  simple:
    image: containous/whoami
    volumes:
      # For configuration volumes checked into the repository, use relative
      # paths.
      - ./config.toml:/app/config.toml
      # For data volumes, use the DATA_DIR environment variable.
      - ${DATA_DIR}/simple:/data
    networks:
      - traefik
      # If you need a private network to orchestrate several containers, specify
      # that in addition to the traefik network. All of the other containers in
      # the compose file should also use the same network.
      - internal
    restart: on-failure

    labels:
      # The following keys are all required for all exposed services.
      - traefik.enable=true
      - traefik.http.routers.simple.entrypoints=https
      - traefik.http.routers.simple.tls=true
      - traefik.http.routers.simple.tls.certresolver=le

      # The default subdomain is generated from the container name and project
      # name (simple-example for this service). You can provide a different name
      # using this setting.
      - traefik.subdomain=example

      # If the service exposes more than a single port, you must specify which
      # one is the HTTP port using this.
      #- traefik.http.services.simple.loadbalancer.server.port=80

      # If this isn't enough flexibility you can also set a custom rule.
      #- traefik.http.routers.simple.rule=Host(`example.com`)

      # For services where you want to use the system-level access control, just
      # enable the middleware.
      #- traefik.http.routers.simple.middlewares=auth@docker

networks:
  # This network has to be pulled in from outside into every container that
  # wants to be hosted through traefik.
  traefik:
    external: true

  internal:
    # The network can be named anything, but setting internal on the network
    # will prevent it from being reachable from the outside (and containers
    # won't be able to reach the internet through it, either).
    internal: true
