#!/usr/bin/env bash
# @describe Use a Hetzner cloud volume as a root volume.
# @arg		volume!							Name or ID of bootable volume
# @option	-n --name <NAME>				Name of server to create (default: same as volume)
# @option	-i --image=ubuntu-22.04 <ID>	ID of image to use
# @option	-t --type=cx51 <TYPE>			Type of machine to use
# @option	-k --ssh-key=`_default_ssh_key` <ID> SSH key to use

# Argc docs: https://github.com/sigoden/argc

set -eu
RESCUE_BOOT_TIME=240

main() {
	server_name=${argc_name:-$argc_volume}

	set +e
	volume_json=$(hcloud volume describe -o json "$argc_volume" 2>/dev/null)
	volume_status=$?
	ip=$(hcloud server ip "$server_name" 2>/dev/null)
	ip_status=$?
	set -e

	if [[ $volume_status -ne 0 ]]; then
		echo "$argc_volume: Volume does not exist"
		return 1
	fi

	location=$(echo "$volume_json" | jq -r '.location.name')
	device_id=$(echo "$volume_json" | jq -r '.linux_device')

	if [[ $ip_status -eq 0 ]]; then
		# TODO - verify that the volume we want is actually attached to this
		# server.
		echo "$server_name is already running"
		echo "$server_name is available at $ip"
		return 0
	fi

	user_data=$(mktemp)
	printf "#cloud-config\nhostname: %s\nfqdn: %s.local\n" "$server_name" "$server_name" >"$user_data"
	create_args=(
		--location "$location"
		--volume "$argc_volume"
		--image "${argc_image:?}"
		--name "$server_name"
		--type "${argc_type:?}"
		--ssh-key "${argc_ssh_key:?}"
		--user-data-from-file "$user_data"
	)
	hcloud server create "${create_args[@]}" --start-after-create=false
	rm "$user_data"
	hcloud server enable-rescue --ssh-key "${argc_ssh_key:?}" "$server_name"
	hcloud server poweron "$server_name"
	ip=$(hcloud server ip "$server_name")
	echo "Created $server_name with IP $ip"
	echo "Waiting for rescue mode to boot"
	sleep $((RESCUE_BOOT_TIME / 2))
	timeout $((RESCUE_BOOT_TIME / 2)) nc -z "$ip" 22
	# shellcheck disable=SC2087
	ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -l root "$ip" bash <<-EOF
	set -eux
	mount $device_id /mnt -o ro
	/mnt/sbin/kexec-boot.sh
	EOF

	echo "$server_name is available at $ip"
}

# @cmd Create a new cloud volume to use as a root volume.
create() {
	echo "Not implemented" >&2
	exit 1
}

# Find any SSH key which is loaded in the local ssh-agent.
_default_ssh_key() {
	patterns=()
	for key in $(ssh-add -lE md5 | cut -d: -f2- | awk '{ print $1 }'); do
		patterns+=(-e "$key")
	done
	hcloud ssh-key list | grep "${patterns[@]}" | awk '{ print $1 }'
	if [[ "${PIPESTATUS[1]}" -ne 0 ]]; then
		echo "No suitable ssh key found and none specified" >&2
		return 1
	fi
}

eval "$(argc --argc-eval "$0" "$@")"
