create-bootable-volume:
  summary: Create a new, bootable volume and corresponding image to boot from it.
  examples:
    - description: Create a bootable volume + snapshot named myserver.
      command: robo create-bootable-volume myserver
  command: cd {{ .robo.path }} && exec bash -c './private-server.py --user-data <(./initial-boot-user-data.py) --username ubuntu --name "$@"' "" "$@"

create-encrypted-volume:
  summary: Create a new, encrypted, bootable volume and corresponding image to boot from it.
  examples:
    - description: Create a bootable volume + snapshot named myserver.
      command: robo create-bootable-volume myserver
  command: |
    cd {{ .robo.path }}
    set -e
    name="$1"
    openssl rand 64 | base64 -w 0 > keyfile
    vault kv put kv/private-server/$name key=$(cat keyfile)
    exec bash -c './private-server.py --encrypt --keyfile keyfile --stage1-setup <(./stage1-setup.py) --user-data <(./initial-boot-user-data.py "'"$name"'") --username ubuntu --name "$@" && rm keyfile' "" "$@"

boot-encrypted-volume:
  summary: Boot an encrypted volume.
  examples:
    - description: Boot the volume named myserver, with other arguments.
      command: robo boot-encrypted-volume devserver --location nbg1 --image 84067928 --type cx11
  command: |
    bash -s <<'EOF' "$@"
    set -euo pipefail
    name="$1"
    shift
    token=$(vault kv get -wrap-ttl=120 -field wrapping_token kv/private-server/$name)
    hcloud server create --volume $name --name $name --user-data-from-file <(printf "#cloud-config\nprivate-server:\n  token: $token\n") "$@"
    echo "Waiting for SSH..."
    timeout 120 nc -z 173.30.0.5 22
    EOF

ansible-local:
  command: ansible-playbook -i localhost, --connection=local ansible/site.yml "$@"

inventory:
  summary: show all assets in Hetzner
  command: |
    echo Snapshots
    hcloud image list -t snapshot
    echo
    echo Volumes
    hcloud volume list
    echo
    echo Servers
    hcloud server list
